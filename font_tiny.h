#ifndef SMALLFONT_H
#define SMALLFONT_H

#include <stdint.h>

__code const uint8_t SmallFont[] = {
    0x3, // font char width
    0x0, 0xB8, 0x0,  // ! LSB
    0x0, 0xB8, 0x0,  // ! MSB

    0x18, 0x0, 0x18,  // " LSB
    0x18, 0x0, 0x18,  // " MSB

    0x50, 0xF8, 0x50,  // # LSB
    0xF8, 0x50, 0xF8,  // # MSB

    0x40, 0xD8, 0x10,  // $ LSB
    0x70, 0xF8, 0x70,  // $ MSB

    0xA8, 0x70, 0xA8,  // % LSB
    0xC8, 0x20, 0x98,  // % MSB

    0x40, 0x20, 0x40,  // & LSB
    0x40, 0x20, 0x40,  // & MSB

    0x0, 0x18, 0x0,  // ' LSB
    0x0, 0x18, 0x0,  // ' MSB

    0x70, 0x70, 0x88,  // ( LSB
    0x0, 0xF8, 0x88,  // ( MSB

    0x88, 0x70, 0x70,  // ) LSB
    0x88, 0xF8, 0x0,  // ) MSB

    0x40, 0x70, 0x40,  // * LSB
    0x60, 0x30, 0x60,  // * MSB

    0x20, 0x70, 0x20,  // + LSB
    0x20, 0x70, 0x20,  // + MSB

    0x80, 0x40, 0x0,  // , LSB
    0x0, 0xC0, 0x0,  // , MSB

    0x20, 0x20, 0x20,  // - LSB
    0x20, 0x20, 0x20,  // - MSB

    0x0, 0x80, 0x0,  // . LSB
    0x0, 0x80, 0x0,  // . MSB

    0xA0, 0x70, 0x28,  // / LSB
    0xC0, 0x20, 0x18,  // / MSB

    0x70, 0x88, 0x70,  // 0 LSB
    0xF8, 0x88, 0xF8,  // 0 MSB

    0x88, 0xF8, 0x80,  // 1 LSB
    0x90, 0xF8, 0x80,  // 1 MSB

    0xD8, 0xA8, 0xD8,  // 2 LSB
    0xE8, 0xA8, 0xB8,  // 2 MSB

    0xD8, 0xA8, 0x70,  // 3 LSB
    0x88, 0xA8, 0xF8,  // 3 MSB

    0x18, 0x20, 0xD8,  // 4 LSB
    0x38, 0x20, 0xF8,  // 4 MSB

    0xB8, 0xA8, 0x48,  // 5 LSB
    0xB8, 0xA8, 0xE8,  // 5 MSB

    0x70, 0xA8, 0x48,  // 6 LSB
    0xF8, 0xA8, 0xE8,  // 6 MSB

    0xA8, 0x78, 0x28,  // 7 LSB
    0xC8, 0x28, 0x18,  // 7 MSB

    0x50, 0xA8, 0x50,  // 8 LSB
    0xF8, 0xA8, 0xF8,  // 8 MSB

    0x50, 0xA8, 0x70,  // 9 LSB
    0xB8, 0xA8, 0xF8,  // 9 MSB

    0x0, 0x50, 0x0,  // : LSB
    0x0, 0x50, 0x0,  // : MSB

    0x80, 0x50, 0x0,  // ; LSB
    0x0, 0xD0, 0x0,  // ; MSB

    0x70, 0xD8, 0x0,  // < LSB
    0x20, 0x50, 0x0,  // < MSB

    0x50, 0x50, 0x50,  // = LSB
    0x50, 0x50, 0x50,  // = MSB

    0x0, 0xD8, 0x70,  // > LSB
    0x0, 0x50, 0x20,  // > MSB

    0x10, 0xE8, 0x10,  // ? LSB
    0x8, 0xA8, 0x38,  // ? MSB

    0xF8, 0x98, 0xF8,  // @ LSB
    0xF8, 0xA8, 0xB8,  // @ MSB

    0xF0, 0x28, 0xF0,  // A LSB
    0xF8, 0x28, 0xF8,  // A MSB

    0xF8, 0xA8, 0x70,  // B LSB
    0xF8, 0xA8, 0xF8,  // B MSB

    0x70, 0x88, 0x50,  // C LSB
    0xF8, 0x88, 0xD8,  // C MSB

    0xF8, 0x88, 0x70,  // D LSB
    0xF8, 0x88, 0xF8,  // D MSB

    0x70, 0x88, 0x50,  // E LSB
    0xF8, 0xA8, 0xD8,  // E MSB

    0xF8, 0x28, 0x0,  // F LSB
    0xF8, 0x28, 0x28,  // F MSB

    0x70, 0x88, 0x40,  // G LSB
    0xF8, 0xA8, 0xF8,  // G MSB

    0xF8, 0x20, 0xF8,  // H LSB
    0xF8, 0x20, 0xF8,  // H MSB

    0x0, 0xF8, 0x0,  // I LSB
    0x0, 0xF8, 0x0,  // I MSB

    0x40, 0x80, 0x78,  // J LSB
    0xC0, 0x80, 0xF8,  // J MSB

    0xF8, 0x10, 0xC8,  // K LSB
    0xF8, 0x60, 0x98,  // K MSB

    0xF8, 0x80, 0x80,  // L LSB
    0x78, 0x80, 0x80,  // L MSB

    0xF0, 0x28, 0xF0,  // M LSB
    0xF8, 0x10, 0xF8,  // M MSB

    0xF0, 0x50, 0x78,  // N LSB
    0xF8, 0x20, 0xF8,  // N MSB

    0x70, 0x88, 0x70,  // O LSB
    0xF8, 0x88, 0xF8,  // O MSB

    0xF0, 0x28, 0x10,  // P LSB
    0xF8, 0x28, 0x38,  // P MSB

    0x70, 0x48, 0x30,  // Q LSB
    0xF8, 0x88, 0xF8,  // Q MSB

    0xF0, 0x8, 0xD0,  // R LSB
    0xF8, 0x68, 0xB8,  // R MSB

    0x50, 0xA8, 0x50,  // S LSB
    0xB8, 0xA8, 0xE8,  // S MSB

    0x8, 0xF8, 0x8,  // T LSB
    0x8, 0xF8, 0x8,  // T MSB

    0x78, 0x80, 0x78,  // U LSB
    0xF8, 0x80, 0xF8,  // U MSB

    0xC0, 0x30, 0xC0,  // V LSB
    0x38, 0xC0, 0x38,  // V MSB

    0x78, 0xA0, 0x78,  // W LSB
    0xF8, 0x40, 0xF8,  // W MSB

    0xA8, 0x50, 0xA8,  // X LSB
    0xD8, 0x20, 0xD8,  // X MSB

    0x28, 0xD0, 0x28,  // Y LSB
    0x18, 0xE0, 0x18,  // Y MSB

    0x20, 0xD8, 0x20,  // Z LSB
    0xC8, 0xA8, 0x98,  // Z MSB

    0x0, 0xF8, 0x88,  // [ LSB
    0x0, 0xF8, 0x88,  // [ MSB

    0x28, 0x70, 0xA0,  // \ LSB
    0x18, 0x20, 0xC0,  // \ MSB

    0x88, 0xF8, 0x0,  // ] LSB
    0x88, 0xF8, 0x0,  // ] MSB

    0x18, 0x8, 0x18,  // ^ LSB
    0x10, 0x8, 0x10,  // ^ MSB

    0x80, 0x80, 0x80,  // _ LSB
    0x80, 0x80, 0x80,  // _ MSB

    0x0, 0x8, 0x10,  // ` LSB
    0x0, 0x18, 0x0,  // ` MSB

    0xF0, 0x28, 0xF0,  // a LSB
    0xF8, 0x28, 0xF8,  // a MSB

    0xF8, 0xA8, 0x70,  // b LSB
    0xF8, 0xA8, 0xF8,  // b MSB

    0x70, 0x88, 0x50,  // c LSB
    0xF8, 0x88, 0xD8,  // c MSB

    0xF8, 0x88, 0x70,  // d LSB
    0xF8, 0x88, 0xF8,  // d MSB

    0x70, 0x88, 0x50,  // e LSB
    0xF8, 0xA8, 0xD8,  // e MSB

    0xF8, 0x28, 0x0,  // f LSB
    0xF8, 0x28, 0x28,  // f MSB

    0x70, 0x88, 0x40,  // g LSB
    0xF8, 0xA8, 0xF8,  // g MSB

    0xF8, 0x20, 0xF8,  // h LSB
    0xF8, 0x20, 0xF8,  // h MSB

    0x0, 0xF8, 0x0,  // i LSB
    0x0, 0xF8, 0x0,  // i MSB

    0x40, 0x80, 0x78,  // j LSB
    0xC0, 0x80, 0xF8,  // j MSB

    0xF8, 0x10, 0xC8,  // k LSB
    0xF8, 0x60, 0x98,  // k MSB

    0xF8, 0x80, 0x80,  // l LSB
    0x78, 0x80, 0x80,  // l MSB

    0xF0, 0x28, 0xF0,  // m LSB
    0xF8, 0x10, 0xF8,  // m MSB

    0xF0, 0x50, 0x78,  // n LSB
    0xF8, 0x20, 0xF8,  // n MSB

    0x70, 0x88, 0x70,  // o LSB
    0xF8, 0x88, 0xF8,  // o MSB

    0xF0, 0x28, 0x10,  // p LSB
    0xF8, 0x28, 0x38,  // p MSB

    0x70, 0x48, 0x30,  // q LSB
    0xF8, 0x88, 0xF8,  // q MSB

    0xF0, 0x8, 0xD0,  // r LSB
    0xF8, 0x68, 0xB8,  // r MSB

    0x50, 0xA8, 0x50,  // s LSB
    0xB8, 0xA8, 0xE8,  // s MSB

    0x8, 0xF8, 0x8,  // t LSB
    0x8, 0xF8, 0x8,  // t MSB

    0x78, 0x80, 0x78,  // u LSB
    0xF8, 0x80, 0xF8,  // u MSB

    0xC0, 0x30, 0xC0,  // v LSB
    0x38, 0xC0, 0x38,  // v MSB

    0x78, 0xA0, 0x78,  // w LSB
    0xF8, 0x40, 0xF8,  // w MSB

    0xA8, 0x50, 0xA8,  // x LSB
    0xD8, 0x20, 0xD8,  // x MSB

    0x28, 0xD0, 0x28,  // y LSB
    0x18, 0xE0, 0x18,  // y MSB

    0x20, 0xD8, 0x20,  // z LSB
    0xC8, 0xA8, 0x98,  // z MSB

    0x0, 0x70, 0x88,  // { LSB
    0x20, 0xD8, 0x0,  // { MSB

    0x0, 0xF8, 0x0,  // | LSB
    0x0, 0xF8, 0x0,  // | MSB

    0x88, 0x70, 0x0,  // } LSB
    0x0, 0xD8, 0x20,  // } MSB

};

#endif
