#ifndef TINYFONT
#define TINYFONT

#include <stdint.h>

static const uint8_t tinyfontWidth = 3;

static const uint8_t tinyfont[] = {
    0x0, 0x17, 0x0,  // ! LSB
    0x0, 0x17, 0x0,  // ! MSB

    0x3, 0x0, 0x3,  // " LSB
    0x3, 0x0, 0x3,  // " MSB

    0xA, 0x1F, 0xA,  // # LSB
    0x1F, 0xA, 0x1F,  // # MSB

    0x8, 0x1B, 0x2,  // $ LSB
    0xE, 0x1F, 0xE,  // $ MSB

    0x15, 0xE, 0x15,  // % LSB
    0x19, 0x4, 0x13,  // % MSB

    0x8, 0x4, 0x8,  // & LSB
    0x8, 0x4, 0x8,  // & MSB

    0x0, 0x3, 0x0,  // ' LSB
    0x0, 0x3, 0x0,  // ' MSB

    0xE, 0xE, 0x11,  // ( LSB
    0x0, 0x1F, 0x11,  // ( MSB

    0x11, 0xE, 0xE,  // ) LSB
    0x11, 0x1F, 0x0,  // ) MSB

    0x8, 0xE, 0x8,  // * LSB
    0xC, 0x6, 0xC,  // * MSB

    0x4, 0xE, 0x4,  // + LSB
    0x4, 0xE, 0x4,  // + MSB

    0x10, 0x8, 0x0,  // , LSB
    0x0, 0x18, 0x0,  // , MSB

    0x4, 0x4, 0x4,  // - LSB
    0x4, 0x4, 0x4,  // - MSB

    0x0, 0x10, 0x0,  // . LSB
    0x0, 0x10, 0x0,  // . MSB

    0x14, 0xE, 0x5,  // / LSB
    0x18, 0x4, 0x3,  // / MSB

    0xE, 0x11, 0xE,  // 0 LSB
    0x1F, 0x11, 0x1F,  // 0 MSB

    0x11, 0x1F, 0x10,  // 1 LSB
    0x12, 0x1F, 0x10,  // 1 MSB

    0x1B, 0x15, 0x1B,  // 2 LSB
    0x1D, 0x15, 0x17,  // 2 MSB

    0x1B, 0x15, 0xE,  // 3 LSB
    0x11, 0x15, 0x1F,  // 3 MSB

    0x3, 0x4, 0x1B,  // 4 LSB
    0x7, 0x4, 0x1F,  // 4 MSB

    0x17, 0x15, 0x9,  // 5 LSB
    0x17, 0x15, 0x1D,  // 5 MSB

    0xE, 0x15, 0x9,  // 6 LSB
    0x1F, 0x15, 0x1D,  // 6 MSB

    0x15, 0xF, 0x5,  // 7 LSB
    0x19, 0x5, 0x3,  // 7 MSB

    0xA, 0x15, 0xA,  // 8 LSB
    0x1F, 0x15, 0x1F,  // 8 MSB

    0xA, 0x15, 0xE,  // 9 LSB
    0x17, 0x15, 0x1F,  // 9 MSB

    0x0, 0xA, 0x0,  // : LSB
    0x0, 0xA, 0x0,  // : MSB

    0x10, 0xA, 0x0,  // ; LSB
    0x0, 0x1A, 0x0,  // ; MSB

    0xE, 0x1B, 0x0,  // < LSB
    0x4, 0xA, 0x0,  // < MSB

    0xA, 0xA, 0xA,  // = LSB
    0xA, 0xA, 0xA,  // = MSB

    0x0, 0x1B, 0xE,  // > LSB
    0x0, 0xA, 0x4,  // > MSB

    0x2, 0x1D, 0x2,  // ? LSB
    0x1, 0x15, 0x7,  // ? MSB

    0x1F, 0x13, 0x1F,  // @ LSB
    0x1F, 0x15, 0x17,  // @ MSB

    0x1E, 0x5, 0x1E,  // A LSB
    0x1F, 0x5, 0x1F,  // A MSB

    0x1F, 0x15, 0xE,  // B LSB
    0x1F, 0x15, 0x1F,  // B MSB

    0xE, 0x11, 0xA,  // C LSB
    0x1F, 0x11, 0x1B,  // C MSB

    0x1F, 0x11, 0xE,  // D LSB
    0x1F, 0x11, 0x1F,  // D MSB

    0xE, 0x11, 0xA,  // E LSB
    0x1F, 0x15, 0x1B,  // E MSB

    0x1F, 0x5, 0x0,  // F LSB
    0x1F, 0x5, 0x5,  // F MSB

    0xE, 0x11, 0x8,  // G LSB
    0x1F, 0x15, 0x1F,  // G MSB

    0x1F, 0x4, 0x1F,  // H LSB
    0x1F, 0x4, 0x1F,  // H MSB

    0x0, 0x1F, 0x0,  // I LSB
    0x0, 0x1F, 0x0,  // I MSB

    0x8, 0x10, 0xF,  // J LSB
    0x18, 0x10, 0x1F,  // J MSB

    0x1F, 0x2, 0x19,  // K LSB
    0x1F, 0xC, 0x13,  // K MSB

    0x1F, 0x10, 0x10,  // L LSB
    0xF, 0x10, 0x10,  // L MSB

    0x1E, 0x5, 0x1E,  // M LSB
    0x1F, 0x2, 0x1F,  // M MSB

    0x1E, 0xA, 0xF,  // N LSB
    0x1F, 0x4, 0x1F,  // N MSB

    0xE, 0x11, 0xE,  // O LSB
    0x1F, 0x11, 0x1F,  // O MSB

    0x1E, 0x5, 0x2,  // P LSB
    0x1F, 0x5, 0x7,  // P MSB

    0xE, 0x9, 0x6,  // Q LSB
    0x1F, 0x11, 0x1F,  // Q MSB

    0x1E, 0x1, 0x1A,  // R LSB
    0x1F, 0xD, 0x17,  // R MSB

    0xA, 0x15, 0xA,  // S LSB
    0x17, 0x15, 0x1D,  // S MSB

    0x1, 0x1F, 0x1,  // T LSB
    0x1, 0x1F, 0x1,  // T MSB

    0xF, 0x10, 0xF,  // U LSB
    0x1F, 0x10, 0x1F,  // U MSB

    0x18, 0x6, 0x18,  // V LSB
    0x7, 0x18, 0x7,  // V MSB

    0xF, 0x14, 0xF,  // W LSB
    0x1F, 0x8, 0x1F,  // W MSB

    0x15, 0xA, 0x15,  // X LSB
    0x1B, 0x4, 0x1B,  // X MSB

    0x5, 0x1A, 0x5,  // Y LSB
    0x3, 0x1C, 0x3,  // Y MSB

    0x4, 0x1B, 0x4,  // Z LSB
    0x19, 0x15, 0x13,  // Z MSB

    0x0, 0x1F, 0x11,  // [ LSB
    0x0, 0x1F, 0x11,  // [ MSB

    0x5, 0xE, 0x14,  // \ LSB
    0x3, 0x4, 0x18,  // \ MSB

    0x11, 0x1F, 0x0,  // ] LSB
    0x11, 0x1F, 0x0,  // ] MSB

    0x3, 0x1, 0x3,  // ^ LSB
    0x2, 0x1, 0x2,  // ^ MSB

    0x10, 0x10, 0x10,  // _ LSB
    0x10, 0x10, 0x10,  // _ MSB

    0x0, 0x1, 0x2,  // ` LSB
    0x0, 0x3, 0x0,  // ` MSB

    0x0, 0x0, 0x0,  // a LSB
    0x0, 0x0, 0x0,  // a MSB

    0x0, 0x0, 0x0,  // b LSB
    0x0, 0x0, 0x0,  // b MSB

    0x0, 0x0, 0x0,  // c LSB
    0x0, 0x0, 0x0,  // c MSB

    0x0, 0x0, 0x0,  // d LSB
    0x0, 0x0, 0x0,  // d MSB

    0x0, 0x0, 0x0,  // e LSB
    0x0, 0x0, 0x0,  // e MSB

    0x0, 0x0, 0x0,  // f LSB
    0x0, 0x0, 0x0,  // f MSB

    0x0, 0x0, 0x0,  // g LSB
    0x0, 0x0, 0x0,  // g MSB

    0x0, 0x0, 0x0,  // h LSB
    0x0, 0x0, 0x0,  // h MSB

    0x0, 0x0, 0x0,  // i LSB
    0x0, 0x0, 0x0,  // i MSB

    0x0, 0x0, 0x0,  // j LSB
    0x0, 0x0, 0x0,  // j MSB

    0x0, 0x0, 0x0,  // k LSB
    0x0, 0x0, 0x0,  // k MSB

    0x0, 0x0, 0x0,  // l LSB
    0x0, 0x0, 0x0,  // l MSB

    0x0, 0x0, 0x0,  // m LSB
    0x0, 0x0, 0x0,  // m MSB

    0x0, 0x0, 0x0,  // n LSB
    0x0, 0x0, 0x0,  // n MSB

    0x0, 0x0, 0x0,  // o LSB
    0x0, 0x0, 0x0,  // o MSB

    0x0, 0x0, 0x0,  // p LSB
    0x0, 0x0, 0x0,  // p MSB

    0x0, 0x0, 0x0,  // q LSB
    0x0, 0x0, 0x0,  // q MSB

    0x0, 0x0, 0x0,  // r LSB
    0x0, 0x0, 0x0,  // r MSB

    0x0, 0x0, 0x0,  // s LSB
    0x0, 0x0, 0x0,  // s MSB

    0x0, 0x0, 0x0,  // t LSB
    0x0, 0x0, 0x0,  // t MSB

    0x0, 0x0, 0x0,  // u LSB
    0x0, 0x0, 0x0,  // u MSB

    0x0, 0x0, 0x0,  // v LSB
    0x0, 0x0, 0x0,  // v MSB

    0x0, 0x0, 0x0,  // w LSB
    0x0, 0x0, 0x0,  // w MSB

    0x0, 0x0, 0x0,  // x LSB
    0x0, 0x0, 0x0,  // x MSB

    0x0, 0x0, 0x0,  // y LSB
    0x0, 0x0, 0x0,  // y MSB

    0x0, 0x0, 0x0,  // z LSB
    0x0, 0x0, 0x0,  // z MSB

    0x0, 0xE, 0x11,  // { LSB
    0x4, 0x1B, 0x0,  // { MSB

    0x0, 0x1F, 0x0,  // | LSB
    0x0, 0x1F, 0x0,  // | MSB

    0x11, 0xE, 0x0,  // } LSB
    0x0, 0x1B, 0x4,  // } MSB

};

#endif
